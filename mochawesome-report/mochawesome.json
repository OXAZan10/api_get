{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 2,
    "pending": 0,
    "failures": 2,
    "start": "2021-02-17T09:43:53.219Z",
    "end": "2021-02-17T09:43:53.496Z",
    "duration": 277,
    "testsRegistered": 4,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7a0f850e-36fc-4124-9559-8ad6762c52ae",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c3b2c8d4-0018-4a40-b182-c7c0857f0a23",
          "title": "Get users",
          "fullFile": "C:\\Users\\Aksana_Zanko\\Desktop\\ATM\\ATM_HW_11\\test\\users.js",
          "file": "\\test\\users.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Get users\"",
              "fullTitle": "Get users \"before all\" hook in \"Get users\"",
              "timedOut": false,
              "duration": 262,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "data.uri = env.uri + data.uri;\nresponse = await sendRequest(data);\nconsole.log(response);",
              "err": {},
              "uuid": "b14741f9-c9a7-41cc-836c-5735124aa7df",
              "parentUUID": "c3b2c8d4-0018-4a40-b182-c7c0857f0a23",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "status code is 200",
              "fullTitle": "Get users status code is 200",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "console.log('status is ' + response.status);\nexpect(response.status).to.eql(200);",
              "err": {
                "message": "AssertionError: expected undefined to deeply equal 200",
                "estack": "AssertionError: expected undefined to deeply equal 200\n    at Context.<anonymous> (test\\users.js:20:40)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "18d7c78d-542b-472a-93e2-44d6a0910396",
              "parentUUID": "c3b2c8d4-0018-4a40-b182-c7c0857f0a23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "content-type header exists in the obtained response",
              "fullTitle": "Get users content-type header exists in the obtained response",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(response.header).to.have.property('content');",
              "err": {
                "message": "AssertionError: Target cannot be null or undefined.",
                "estack": "AssertionError: Target cannot be null or undefined.\n    at Context.<anonymous> (test\\users.js:24:45)\n    at processImmediate (internal/timers.js:456:21)",
                "diff": null
              },
              "uuid": "f9bcbdff-8a39-4f6c-a21c-63562ae7900f",
              "parentUUID": "c3b2c8d4-0018-4a40-b182-c7c0857f0a23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "the value of the content-type header is application/json; charset=utf-8",
              "fullTitle": "Get users the value of the content-type header is application/json; charset=utf-8",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect()",
              "err": {},
              "uuid": "23a88624-c09e-4dbf-817c-7643e21dc76a",
              "parentUUID": "c3b2c8d4-0018-4a40-b182-c7c0857f0a23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "the content of the response body is the array of 10 users",
              "fullTitle": "Get users the content of the response body is the array of 10 users",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usersFromRequest = response;\nexpect(usersFromRequest.length).to.eql(10)",
              "err": {},
              "uuid": "063ef351-9277-4789-9d92-9b7b994103f1",
              "parentUUID": "c3b2c8d4-0018-4a40-b182-c7c0857f0a23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23a88624-c09e-4dbf-817c-7643e21dc76a",
            "063ef351-9277-4789-9d92-9b7b994103f1"
          ],
          "failures": [
            "18d7c78d-542b-472a-93e2-44d6a0910396",
            "f9bcbdff-8a39-4f6c-a21c-63562ae7900f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}